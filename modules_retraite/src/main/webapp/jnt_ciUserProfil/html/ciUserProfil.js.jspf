<%--
	@author : el-aarko
	@created : 4 sept. 2012
	@Id : idDeLaPage
	@description : queFaitLaJsp

 --%>

<%@include file="../../common/declarations.jspf" %>

<c:set value="${renderContext.site.properties['avatarMaxSize']}" var="avatarMaxSize" />

<%-- Veuillez commenter les blocs importants --%>
<template:addResources type="javascript" resources="jquery.min.js,jquery.validate.js" />
<template:addResources type="javascript" resources="jquery.tmpl.min.js"/>
<template:addResources type="javascript" resources="jquery.maskedinput-1.3.min.js" />
<template:addResources type="javascript" resources="ciUserProfil/ciUserProfil.js"/>
<c:set var="showDeleteButton" value="${not empty currentUser.properties['j:picture'] ? 'true' : 'false'}" />
<utility:logger level="debug" value="show avatar delete button : ${showDeleteButton}" />
<c:set var="avatarRemoved" value="${currentUser.properties['gender'] eq ciConstants.GENDER_FEMALE ? ciConstants.AVATAR_DEFAULT_FEMALE : ciConstants.AVATAR_DEFAULT_MALE}" />
<template:addResources insert="true">
	<script type="text/javascript">
		var avatarSrc = '${avatarSrc}';
		var urlAction =  '${url.base}${currentNode.path}.ciLoadAvatar.do';
		var avatarMaxSize = eval("${avatarMaxSize.long}");
		if (!avatarMaxSize) avatarMaxSize = 6291456;
		var showDeleteButton = eval('${showDeleteButton}');
		var avatarRemoved = '${avatarRemoved}';
	</script>
</template:addResources>
<c:if test="${isMaintenance and not renderContext.editMode}">
	<template:addResources insert="true">
		<script type="text/javascript">
			$(document).ready(function(){
				$('#userProfil select, #userProfil input').attr('disabled', 'disabled');
			});
		</script>
	</template:addResources>
</c:if>
<template:addResources type="javascript" resources="jCrop/loader/fileuploader.js" />
<template:addResources type="javascript" resources="jCrop/jquery.Jcrop.ag2r.js" />
<template:addResources type="javascript" resources="ciAvatar/ciAvatar.js" />

<fmt:message var="disponible" key='registration.error.disponible' />
<fmt:message var="indisponible" key='registration.error.indisponible' />
<fmt:message var="valide" key='profile.error.password.valide' />
<fmt:message var="invalide" key='profile.error.password.invalide' />
<fmt:message var="passwordMandatory" key='registration.error.password.required' />
<fmt:message var="passwordLength" key='registration.error.password.length' />
<fmt:message var="passwordNotSame" key='registration.error.password.confirm.length' />

<template:addResources>
<script type="text/javascript">

var passwordChangeFormActivated = false;
var correctPassword = false;

var loadThematicsAction = "${url.base}${currentNode.path}.ciGetThematicNodes.do";

var passwordChange1 = function() {
	if (!correctPassword) {
		$("#passwordValid").removeClass("correct").html("${invalide}").show();
		return;
	}
	
	if ($("#newPwd").val() == "") {
		$("#newPasswordError").html("${passwordMandatory}").show();
		return;
	}
	
	if ($("#newPwd").val().length < 4) {
		$("#newPasswordError").html("${passwordLength}").show();
		return;
	}
	
	if ($("#newPwd").val() != $("#confNewPwd").val()) {
		$("#newPasswordError").html("${passwordNotSame}").show();
		return;
	}
	$("#passwordValid").hide();
	$("#newPasswordError").hide();
	var queryString = "newPwd=" + $("#newPwd").val();
	jQuery.ajax({
		type : "post",
		url : "${url.base}${currentNode.path}.ciChangePasswordAction.do",
		data : queryString,
		dataType  :"json",
		success : function(response) {
			if (response == null)
				return;
			if (response.OK){
				$("#passwordChangedOk").show();
				trackEvent(['Espace membre','Valider modification Mdp']);
			}
			if (response.KO)
				$("#passwordChangedKo").show();
		}
	});
	
	//cette fonction se trouve dans le templates_retraite projet - js.js
	hideBlocNewPwdFunc();
};


var validatePassword = function() {
	if (!passwordChangeFormActivated) {
		return;
	}
	jQuery.ajax({
		type : "post",
		url : "${url.base}${currentNode.path}.ciCheckCorrectPasswordAction.do",
		data : "password="+$("#password").val(),
		dataType :"json",
		success : function(response) {
			correctPassword = response.correct;
			if (response.correct) {
				$("#passwordValid").addClass("correct").html("${valide}").show();
			} else {
				$("#passwordValid").removeClass("correct").html("${invalide}").show();
			}
		}
	});
	
};


var inscriptionFormValidator;
$(document).ready(function() {
	$("#passwordValid").hide();
	$("#password").blur(validatePassword);
	$("#passwordChange").click(passwordChange1);
	
	$("input.btModifMDP").click(function() {
		$("#password").removeAttr("disabled")
		passwordChangeFormActivated = true;
		$("#passwordChangedOk").hide();
		$("#passwordChangedKo").hide();
	});
	$("input.btAnnuleModifMDP").click(function() {
		var test = this;
		var test2 = $(this);
		passwordChangeFormActivated = false;
		$("#password").attr("disabled", "disabled").val("");
		$("#passwordValid").hide();
	});
	
	$("#birthDate").mask("99/99/9999");
	$("#retreatYear").mask("9999");

	/*
	* Validation du formlaire d'inscription (Jquery Validator)
	*/
	$(".messageGenerique").hide();
   	jQuery.validator.addMethod("frenchDate", function(value, element) {
   		if (value == "") return true;
   		var regex = new RegExp(/^(0?[1-9]|[12][0-9]|3[01])[\/\-](0?[1-9]|1[012])[\/\-]\d{2}$/);
   		return regex.test(value);
   	});
   	
   	/*
   	* Fonction de gestion des Pays France et Dom Tom :
   	*/
   	var isFranceOrDomTomCountry = function() {
   		var selecedCountry = $("#country").val();
		return (selecedCountry == "France" || selecedCountry == "Wallis et Futuna" ||  selecedCountry == "Polyn&eacute;sie fran&ccedil;aise"
			||  selecedCountry == "Guyane fran&ccedil;aise" ||  selecedCountry == "Terres australes fran&ccedil;aises"
			||  selecedCountry == "Saint Pierre et Miquelon" ||  selecedCountry == "La R&eacute;union"
			||  selecedCountry == "La Nouvelle Cal&eacute;donie" ||  selecedCountry == "Mayotte"
			||  selecedCountry == "Les Antilles Fran&ccedil;aises");
   	};
   	
   	$("#country").change(function() {
   		if (isFranceOrDomTomCountry()) {
   			$(".conteneurZip").show();
   			$(".conteneurCPErreur").show();
   		} else {
   			$(".conteneurZip").hide();
   			$(".conteneurCPErreur").hide();
   			$("#zipCode").val("");
   		}
   	});
   	
   	jQuery.validator.addMethod("frenchZip", function(value, element) {
   		if (value == "") return true;
   		if (isNumber(value) > 0 && value.length >= 2) {
			var dep = value.substring(0,2);
			if (eval(dep) >= 1 && eval(dep) <= 95) {
				return true;
			} else if (eval(dep) >= 97) {
				var code = value.substring(0,3);
				if ($.inArray(code, allowedOverseaseRegions) > -1) {
					return true;
				} 
			}
		}
   		return false;
   	});

	$(".messageGenerique").hide();
	inscriptionFormValidator = jQuery("#profilForm").validate({
     	onkeyup: false,
     	onblur : true,
     	errorElement: "span",
      	errorClass: "messageErreur",
      	errorContainer: $(".messageGenerique"),
  		/*errorPlacement: function(error, element) {
			var errorFor = error.attr("for");
			if (errorFor == "zipCode") {
				$(".conteneurCPErreur").append(error);
			} else if (errorFor == "cguAccepted") {
				error.insertBefore($("#cguMessage"));
			} else {
				error.insertAfter(element);
			}
		},*/
  		rules : {
  			firstname : "required",
  			lastname : "required",
  			pseudoname : {
  				required : true,
  				minlength : 4,
  				maxlength : 20
  			},
  			emailAddress : {
  				required : true,
  				email : true
  			},
  			country : "required",
  			zipCode :  {
  				frenchZip : true,
  				number : true,
  				required : function() {
  					return isFranceOrDomTomCountry();
  				},
  				minlength : 5,
  				maxlength : 5
  			}
  		},
  		messages: {
  			firstname: "<fmt:message key='profile.error.firstname.required'/>",
  			lastname: "<fmt:message key='profile.error.lastname.required'/>",
  			pseudoname : {
  				required : "<fmt:message key='profile.error.pseudo.required'/>",
  				minlength : "<fmt:message key='profile.error.pseudo.length'/>",
  				maxlength : "<fmt:message key='profile.error.pseudo.length'/>"
  			},
  			emailAddress : "<fmt:message key='profile.error.mail.invalid'/>",
  			country : "<fmt:message key='profile.error.password.required'/>",
  			zipCode :  {
  				required : "<fmt:message key='profile.error.zipcode.required'/>",
  				frenchZip : "<fmt:message key='profile.error.zipcode.invalid'/>",
  				number : "<fmt:message key='profile.error.zipcode.invalid'/>",
  				minlength : "<fmt:message key='profile.error.zipcode.length'/>",
      			maxlength : "<fmt:message key='profile.error.zipcode.length'/>"
  			}
  		}
 	});
	
	$(".champFormInscription").blur(function() {
		if ($(this).hasClass("messageErreur") && $(this).next().hasClass("messageErreur")) {
			if ($(this).next().css("display") != "none") {
				$(this).next().next(".infoChamp").hide();
			} else {
				$(this).next().next(".infoChamp").show();
			}
		} else {
			$(this).next().next(".infoChamp").show();
		}
	});
	
	
	/*
   	* Validation de l'unicite du pseudoname
   	*/
   	var availablePseudoname = true;
	var validatePseudonameUnicity = function() {
		if (inscriptionFormValidator.check(inscriptionFormValidator.currentForm.pseudoname)) {
			jQuery.ajax({
      			type : "post",
      			url : "${url.base}${currentNode.path}.ciCheckUserUnicityAction.do",
      			data : "pseudoname="+$("#pseudoname").val(),
      			dataType :"json",
      			success : function(response) {
      				availablePseudoname = response.available;
      				if (response.available) {
      					$("#pseudonameValid").addClass("pseudoValideMessage").html("${disponible}").show();
      				} else {
      					$("#pseudonameValid").removeClass("pseudoValideMessage").html("${indisponible}").show();
      				}
      			}
      		});
		} else {
			$("#pseudonameValid").hide();
		}
	};
	$("#pseudoname").blur(validatePseudonameUnicity);
	
	/*
   	* Validation de l'unicite de l'adresse e-mail
   	*/
   	var availableEmailAddress = true;
   	var validateEmailAddressUnicity = function() {
		if (inscriptionFormValidator.check(inscriptionFormValidator.currentForm.emailAddress)) {
			jQuery.ajax({
      			type : "post",
      			url : "${url.base}${currentNode.path}.ciCheckUserUnicityAction.do",
      			data : "emailAddress="+$("#emailAddress").val(),
      			dataType :"json",
      			success : function(response) {
      				availableEmailAddress = response.available;
      				if (response.available) {
      					$("#emailAddressValid").addClass("pseudoValideMessage").html("${disponible}").show();
      				} else {
      					$("#emailAddressValid").removeClass("pseudoValideMessage").html("${indisponible}").show();
      				}
      			}
      		});
		} else {
			$("#emailAddressValid").hide();
		}
	};
	$("#emailAddress").blur(validateEmailAddressUnicity);
	
	$("#profilForm").submit(function() {
		if (inscriptionFormValidator.checkForm() && availablePseudoname && availableEmailAddress) {
			for(var i=0; i< events.length; i++){
				trackEvent(events[i]);
			}
			trackEvent(['Espace membre','Validation modifier profil']);
			
			setTimeout(function(){return true;},3000);
			return true;
		} else {
			$(".messageGenerique").show();
			window.scrollTo($(".messageGenerique").offset().left,$(".messageGenerique").offset().top);
			$(".champFormInscription ").blur();
			validatePseudonameUnicity();
			validateEmailAddressUnicity();
			return false;
		}
	});
	
	$("#submitButton").click(function() {
		$("#profilForm").submit();
   	});
	
	initSelectedCountry();
	initSituationRadioButtons();
	
	$("#pseudoname").bind('paste', function (e) {
		e.preventDefault();
	});
});
</script>

</template:addResources>